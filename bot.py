import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ConversationHandler, CallbackContext
from dotenv import load_dotenv

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–æ–≤ ---
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –î–æ–±–∞–≤—å –≤ Railway –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞
PORT = int(os.getenv("PORT", 5000))  # –î–ª—è –≤–µ–±—Ö—É–∫–∞

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è ---
ASK_AGE = 1
user_age = {}

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start ---
async def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("14-17 –ª–µ—Ç", callback_data="age_14_17")],
        [InlineKeyboardButton("18+ –ª–µ—Ç", callback_data="age_18_plus")]
    ]
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:", reply_markup=InlineKeyboardMarkup(keyboard))
    return ASK_AGE

async def handle_age(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞"""
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat.id

    user_age[chat_id] = 14 if query.data == "age_14_17" else 18

    keyboard = [
        [InlineKeyboardButton("üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã", callback_data="category_banks")],
        [InlineKeyboardButton("üîç –°—Ä–∞–≤–Ω–∏—Ç—å –∫–∞—Ä—Ç—ã", callback_data="compare_cards")],
        [InlineKeyboardButton("üéÅ –ê–∫—Ü–∏–∏", callback_data="promo")]
    ]
    await query.edit_message_text("üéÆ –í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª:", reply_markup=InlineKeyboardMarkup(keyboard))
    return ConversationHandler.END

async def button_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()
    await query.edit_message_text("–¢—ã –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É.")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    app = Application.builder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={ASK_AGE: [CallbackQueryHandler(handle_age)]},
        fallbacks=[]
    )

    app.add_handler(conv_handler)
    app.add_handler(CallbackQueryHandler(button_handler))

    # --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
    if WEBHOOK_URL:
        logging.info("üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ WEBHOOK")
        app.run_webhook(
            listen="0.0.0.0",
            port=PORT,
            url_path=BOT_TOKEN,
            webhook_url=f"{WEBHOOK_URL}/{BOT_TOKEN}"
        )
    else:
        logging.info("ü§ñ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ POLLING")
        app.run_polling()

if __name__ == "__main__":
    main()
